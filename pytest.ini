[tool:pytest]
# Pytest configuration for Bedtime Storyteller

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Output formatting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    hardware: Hardware tests (may require actual hardware)
    slow: Slow tests (longer than 1 second)
    network: Tests that require network access
    audio: Tests that involve audio processing
    safety: Tests for content safety filtering
    memory: Tests for memory usage optimization
    performance: Performance benchmark tests
    pi_zero: Tests specific to Pi Zero 2W
    pi_5: Tests specific to Pi 5
    turkish: Tests for Turkish language content
    english: Tests for English language content

# Coverage reporting
[coverage:run]
source = storyteller
omit = 
    */tests/*
    */conftest.py
    */setup.py
    */venv/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Logging configuration for tests
log_cli = true
log_cli_level = DEBUG
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Minimum version requirements
minversion = 6.0

# Timeout for tests
timeout = 300

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning